#summary MkS Shell plugin help
#labels mksshell,interpreter,shell,Users-Documentation,commands
#sidebar TOC

= Introduction =

The MkS Shell plugin add a terminal like front end to our internal MkSShellInterpreter.

= Details =

The MkS Shell Interpreter is a command processing class that allow us to execute command on object without needing to deal directly with them.<br />
The MkS Shell plugin allow you to execute commands directly by hand.<br />
It's more a debugging / dev tool than something you may daily need.<br />
Usualy *red* output mean something went *wrong*, while something *green* mean something *right*.

== Short list of builtin commands: ==

 * [MkSShell#help help]: List available commands, print help for a command.
 * [MkSShell#echo echo]: Print back the passed parameters to the output.
 * [MkSShell#parser parser]: Add and remove console output parsers.
 * [MkSShell#abbreviation abbreviation]: Manage abbreviations - quick way for insert syntax constructions.
 * [MkSShell#association associaton]: Configure file name to language associations.
 * [MkSShell#environment environment]: Manage system environment.(i.e. set PATH for search compilers and other software)
 * [MkSShell#tools tools]: Add and remove tools - configurable menu items.



== Commands description: ==
----
=== help ===
*NAME*
       help - list available commands, print help for a command.

*SYNOPSIS*
       help `[COMMAND]`

*DESCRIPTION*
       If executed without arguments - list all available commands.<br/>
       If COMMAND name given - print help information for the command.
----
=== echo ===
*NAME*
       echo - display a line of text.

*SYNOPSIS*
       echo `[STRING(s)]`

*DESCRIPTION*
       Split string(s) onto arguments, and print, how it is interpreted by interpreter. This command don't have any practical reason, but can we used for test purposes. For example - test, how does special symbols escaping work, and how arguments splited.

*EXAMPLES*
{{{
MkS:/> echo hello, world
Argument: <hello,>
Argument: <world>
MkS:/> echo 'hello, world'
Argument: <'hello,>
Argument: <world'>
MkS:/> echo "hello, world"
Argument: <hello, world>
MkS:/> 
}}}
----
=== parser ===
*NAME*
       parser - allows to add and remove console output parsing patterns.

*SYNOPSIS*
       parser `[add NAME REGEXP FILENAME COLUMN ROW PATTERN_TYPE PATTERN_TEXT FULL_TEXT | remove NAME REGEXP]`

*DESCRIPTION*
       Add or remove console parsers.<br>
       You can find info about parsers at <doxygen docs>/doc/html/parsing.html file.<br/>
         
       add - add parser. Parameters listed.<br/>
       remove - remove parser by it's name and regular expression.
*EXAMPLES*
{{{
MkS:/> # #warning preprocessor dirrective
MkS:/> parser add "GCC" "^([\w\d\./\\\-]+):(\d+):\d+: warning: #warning ([^\n]*)" "%1" "-1" "%2" "warning" "%3" "%0"
}}}
----
=== abbreviation ===
*NAME*
       abbreviation - Manage abbreviations (*code snipets*) - quick way for insert syntax constructions.

*SYNOPSIS*
       abbreviation `[add MACRO DESCRIPTION LANGUAGE CODE | del MACRO LANGUAGE | show MACRO LANGUAGE | list <LANGUAGE> | clear]`

*DESCRIPTION*
       Add, delete, show, list or clear abbreviations, some templates can be show [http://monkeystudio.org/wiki/Abbreviations here].<br />
       A place holder (*'|'* character) can be inserted to state where the text cursor should be positioned after the macro expansion.<br />

       add - Add an abbreviation.<br />
       del - Delete a specific language macro.<br />
       show - Show a specific language macro.<br />
       list - List all abbreviations of a specified language, or all languages if language is not specified.<br />
       clear - clear all abbreviations

*EXAMPLES*
{{{
MkS:/> abbreviation add "switchb" "A switch statement" "C++" "switch( | )\n{\n}"
MkS:/> 
}}}
----
=== association ===
*NAME*
       association - Manage associations (*languages suffixes*) - quick way for associate some file extension with language names.

*SYNOPSIS*
       association `[add TYPE SUFFIXES | set TYPE SUFFIXES | del TYPE SUFFIXES | list <TYPE> | clear <TYPE>]`

*DESCRIPTION*
       Add, set, delete, list or clear associations.<br />

       add - Add associations (previous content is keep).<br />
       set - Set associations (previous content is erased).<br />
       del - Delete a specific language associations.<br />
       list - List all associations of a specified language, or all languages if language is not specified.<br />
       clear - clear all associations or the language associations if defined.

*EXAMPLES*
{{{
MkS:/> association set "C++" "*.c, *.cpp, *.h, *.hpp"
MkS:/> 
}}}
----
=== environment ===
*NAME*
       environment - Manage environment variables - quick way for manage environment variables inside MkS.

*SYNOPSIS*
       environment `[set NAME VALUE | unset NAME | clear | enable NAME true/false | list]`

*DESCRIPTION*
       Set, unset, clear, enable or list environment variables.<br />

       set - Set the content of a variable.<br />
       unset - Unset the content of a variable.<br />
       clear - Unset all variables.<br />
       enable - Enable or disable a variable. A disable variable will not be defined when running a process.<br />
       list - List all variables and their value.

*EXAMPLES*
{{{
MkS:/> environment set "PATH" "/usr/bin"
MkS:/> environment enable "PATH" "false"
MkS:/>
}}}
----
=== tools ===
*NAME*
       tools - Manage tools inside MkS menu bar - quick way for add custom actions in the MkS menu bar.

*SYNOPSIS*
       tools `[set CAPTION ICON FILEPATH WORKING_PATH DESKTOP_ENTRY(true/false) USE_CONSOLE_MANAGER(true/false) | unset CAPTION | clear | update-menu | list]`

*DESCRIPTION*
       Set, unset, clear, update menu or list tools.<br />

       set - Set a tool.<br />
       unset - Unset a tool.<br />
       clear - Unset all tools.<br />
       update-menu - Update (apply) the menu bar entries.<br />
       list - List all tools and their properties.

*EXAMPLES*
{{{
MkS:/> tools set "Calculator" "calc.png" "calc.exe" "" "false" "false"
MkS:/> tools update-menu
MkS:/> tools list
MkS:/> tools clear
MkS:/> tools update-menu
}}}
----